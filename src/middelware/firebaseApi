import firebase from "firebase";
import firebaseInstance from './firebase'

export default {
    readKitsData,
    readPropsData,
    insertKit,
    insertProp,
    updateKit,
    updateProp,
    deletePropsData,
    deleteKitsData
}

function readData(path){
    return firebaseInstance.firebase.database().ref(path).once('value')
        .then(res => {
            return res.val();
        })
}

function writeToData(path, data) {
    firebaseInstance.firebase.database().ref(path).push(data)
}

function deleteData(path) {
    firebaseInstance.firebase.database().ref(path).set(null)
}

function  updateData(path,data) {
    firebaseInstance.firebase.database().ref(path).set(data)
}

function insertKit(data) {
    const path = "kits"
    writeToData(path,data)
}

function insertProp(data) {
    const path = "props"
    writeToData(path,data)
}

function readKitsData(self) {
    if (self){
        var path = `kits/${self.$route.params.kitId}`
    } else {
        var path = "kits"
    }
    return readData(path)
}

function readPropsData(self) {
    if (self) {
        var path = `props/${self.$route.params.propId}`
    } else {
        var path = "props"
    }
    return readData(path)
}

    function deletePropsData(key) {
        const path = `props/${key}`
        deleteData(path)
    }
    function deleteKitsData(key) {
        const path = `kits/${key}`
        deleteData(path)
    }

    function updateKit(data, self) {
        const path = `kits/${self.$route.params.kitId}`
        updateData(path,data)
    }
function updateProp(data, self) {
    const path = `props/${self.$route.params.propId}`
    updateData(path,data)
}